(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute 'text'"
p3
sS'layer'
p4
S'/home/nikhil/Documents/itws_2/web2py/applications/nikhil/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    notes=db(db.text).select(orderby=db.text.number)\n    return dict(message=notes)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n"""    \n    return dict(form=auth())\n\ndef create():\n\tresponse.flash=\'this is create page\'\n\tform=SQLFORM(db.text)\n\tif form.process().accepted:\n\t\tresponse.flash=\'form accepted\'\n\telif form.errors:\n\t\tresponse.flash=\'please correct\'\n        return dict(form=form)\n\ndef edit():\n\tresponse.flash=\'welcome to edit page\'\n\ti=db.text(request.args(0))\n\tprint i\n\tform=SQLFORM(db.text,i,deletable=True)\n\tif form.validate:\n\t\tdb(db.text.id==i.id).delete()\n\t\tredirect(URL(\'index\'))\n\telse:\n\t\tdb(db.text.id==i.id).update(title=form.vars[\'body\'],data=form.vars[\'data\'],number=form.vars[\'number\'])\n\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/nikhil/Documents/itws_2/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/nikhil/Documents/itws_2/web2py/applications/nikhil/controllers/default.py", line 101, in <module>\n  File "/home/nikhil/Documents/itws_2/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/nikhil/Documents/itws_2/web2py/applications/nikhil/controllers/default.py", line 22, in index\n    notes=db(db.text).select(orderby=db.text.number)\n  File "/home/nikhil/Documents/itws_2/web2py/gluon/dal.py", line 8329, in __getattr__\n    return ogetattr(self, key)\nAttributeError: \'DAL\' object has no attribute \'text\'\n'
p11
s.